#!/bin/bash
echo
echo "# --------------------------------------------------------"
echo "# Name:     Roland Balgobind"
echo "# Date:     7th November 2021"
echo "# Version:  1.0"
echo "# Comments: ConfigMap based NGINX deployment "
echo "#           with a simple website"
echo "# --------------------------------------------------------"
echo

myappname="rolydemoapplication2"
mynamespace="mytenantns"

# . ./variables.sh

rm -f mypod.yaml
tee mypod.yaml << \EOF
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: svrdetails
  namespace: mynamespaceplaceholder
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
    <title>Nginx App</title>
    <style>
        body {
            width: 35em;
            margin: 0 auto;
            font-family: Tahoma, Verdana, Arial, sans-serif;
        }

        .topnav a {
          color: black;
          text-align: center;
          padding: 3px 20px; 3px; 20px;
          text-decoration: none;
          font-size: 17px;
        }

        .topnav a:hover {
          background-color: black;
          color: white;
        }

        .topnav a.active {
          background-color: red;
          color: white;
        }

    </style>
    </head>
    <body>
    <br><br>
    <hr>
    <br>

    <center>
    <div class="topnav" style="margin: -10px 0 -10px 0">
      <a class="active" href="#home">HOME</a>
      <a href="#about">ABOUT</a>
      <a href="#gallery">GALLERY</a>
      <a href="#contact">CONTACT</a>
    </div>
    </center>
    <br>
    <hr>

    <div class="myClass" style="padding: 0 10% 0 10%;">

    <marquee behavior="alternate" scrollamount="2"><h1>Roland's <font color=red>Deployment </font>Validation</h1></marquee>
    </div>
    <p style="margin-top:-2px">If you see this page, the nginx web server has had
    its <i>pod modified</i> and has been
    successfully installed </p>

    <p>Invoke <i><b>kubectl delete ns <namespace></b></i> to remove the validation
    pod and service after testing has been completed</p>

    <hr style="margin-top:30px">
    <p style="padding-left: 15%">&copy; Copyright Balgobind Software Limited, 2021. All rights reserved</p>
  init.sh: |
    cp /svrdetails/index.html /usr/share/nginx/html
    /usr/sbin/nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  namespace: mynamespaceplaceholder
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      volumes:
      - name: svrdetails
        configMap:
          name: svrdetails
          defaultMode: 0777
      containers:
      - command: ["sh","-c","/svrdetails/init.sh; sleep infinity"]
        image: nginx
        ports:
        - containerPort: 80
        name: mycontainer
        volumeMounts:
          - mountPath: /svrdetails
            name: svrdetails

---
apiVersion: v1
kind: Service
metadata:
  name: app1-svc
  namespace: mynamespaceplaceholder
  annotations:
    service.beta.kubernetes.io/azure-dns-label-name: myappdnsplaceholder
  labels:
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: app1

EOF

sed -i "s/myappdnsplaceholder/$myappname/g" mypod.yaml
sed -i "s/mynamespaceplaceholder/$mynamespace/g" mypod.yaml

# Create Solution
kubectl delete -f mypod.yaml -n $mynamespace > /dev/null 2>&1
sleep 2
kubectl create -f mypod.yaml -n $mynamespace

echo
echo "Site URL: $myappname.$MyLocation.cloudapp.azure.com"
echo
